{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green68\blue254;\red77\green77\blue77;\red103\green103\blue103;
\red42\green55\blue62;\red245\green245\blue245;\red0\green61\blue204;\red0\green0\blue0;\red52\green52\blue52;
\red217\green11\blue0;\red127\green127\blue127;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c26667\c99608;\csgray\c37475;\csgray\c47953;
\cssrgb\c21569\c27843\c30980;\cssrgb\c96863\c96863\c96863;\csgenericrgb\c0\c23922\c80000;\csgenericrgb\c0\c0\c0;\csgray\c26515;
\csgenericrgb\c85098\c4314\c0;\csgenericrgb\c49804\c49804\c49804;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25100\viewh17360\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Chat Application using Firebase :-
\b0 \
\
	Firebase is perfect for build a chat application with real time database. It\'92s easy to use and store the data in firebase real time database.\
\

\b Firebase Configuration :-
\b0 \
\
	First thing you are going to do is integrate firebase account in {\field{\*\fldinst{HYPERLINK "https://console.firebase.google.com/"}}{\fldrslt https://console.firebase.google.com/}}. \

\b \
ADD Firebase to your iOS app :-
\b0 \
\
STEPS :-\
\
	- Register app\
	- Download GoogleService-info.plist file\
	- Add Firebase SDK\
	- Connect firebase in AppDelegate\
\

\b Let\'92s Get Started :-
\b0 \
\

\b  - To create new user account with E-mail, follow the steps :-\

\b0  	\
	- Include the following pods in your Podfile for authentication :-\
\cf2 		\cf3 pod \'91Firebase/Auth\'92\
		pod \'91Firebase/Database\'92\cf0 \
	\
	- Import Firebase Module in AppDelegate :-\
\cf4 		\cf3 import Firebase\cf0 \
	\
	- Configure firebaseApp in 
\f1\fs28\fsmilli14400 \cf5 \cb6 \expnd0\expndtw0\kerning0
didFinishLaunchingWithOptions
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0  method :-\
		\cf3 FirebaseApp.configure()\cf7 \
	\
	- \cf8 Create a new account using user\'92s E-mail and password :-\
		\
		\cf3 Auth.auth.createUser(withEmail: email, password: password) \{ (authResult, error) in\
			if error == nil\
			\{\
				// User create successfully\
			\}\
		\}\cf8 			\
\cf0 	\
	- For Sign-in user with E-mail and password :-\
	\
		\cf3 Auth.auth.signIn(withEmail: email, password: password) \{ (user, error) in\
				// Sign in  successfully\
		\}\
\
\cf8 	- Add User data in Firebase real-time Database :-\
		\
		\cf3 Auth.auth.createUser(withEmail: email, password: password) \{ (authResult, error) in\
			var ref: DatabaseReference\
			let full-name = [\'93First-name\'94: Firebase , \'93Last-name\'94: Demo]\
			self.ref.child(\'93users\'94).child((user?.uid)!).setValue([\'93username\'94: full-name])\
		\}\
\

\b \cf8 - To create new user account with Facebook SDK :-\

\b0 \
	- include the following pods in your Podfile for Facebook authentication :-\
		\cf3 pod \'91FBSDKLoginKit\'92\
		pod \'91FacebookCore\'92\
		pod \'91FacebookLogin\'92\cf8 \
	\
	- Go {\field{\*\fldinst{HYPERLINK "https://developers.facebook.com/docs/facebook-login/ios/"}}{\fldrslt https://developers.facebook.com/docs/facebook-login/ios/}} and register app for Facebook authentication\
\
	-  Login User with Facebook authentication :-\
\
		\cf9 let credential = FacebookAuthProvider.credential(withAccessToken: FBSDKAccessToken.current().tokenString)\cf8 \
		\cf3 Auth.auth.signInAndRetrieveData(with: credential) \{ (authResult, error) in\
		if error != nil\
		 \{\
			 return // it gives the error if present\
		 \}\
\

\b - \cf8 Forget Password reset with E-mail :-\cf3 \

\b0 	\
	let resetEmail = forgetPasswordAlert.textField.text \cf10 // AlertController E-mail Text-filled \cf3 \
	Auth.auth.sendPasswordReset(withEmail: resetEmail!, completion: \{ (error) in\
		if error != nil\
		\{\
			// Reset Failed \
		\}\
		else\
		\{\
			// Reset Email sent successfully \
		\}\
	\})\
\

\b \cf8 - To Get All users From Firebase database except current user :-\
\
	
\b0 \cf11 let ref
\b  = 
\b0 Database.database().reference()\
	ref.child(\'93users\'94).observeSingleEvent(of: .value, with: \{ (snapshot) in \cf10 // snapshot of users database\cf11 \
	if snapshot.exists()\
	\{\
		if let userData = snapshot.value as? Dictionary<String,AnyObject>
\b  
\b0 \
		\{\
			for(key, value) in userData \{\
				if let userValue = value as? Dictionary<String,AnyObject>
\b  
\b0  \cf10 // list of users
\b \cf11 \
				\{\
					
\b0 if(Auth.auth().currentUser!.uid != key) \{.  \cf10 // except current user\cf11 \
						let dict = NSMutableDictionary()\
						dict.setObject(key, forKey:\'94firebaseId\'94 as NSCopying) \cf10 // add firebaseId of users \cf11 						dict.setObject((userValue[\'93username\'94] as! NSDictionary).value(forKey: \'93First-name\'94)!, forKey: \'93First-name\'94 as NsCopying)						self.arrUserList.add(dict) \cf10 // list of users added in array\cf11 \
					\}\
				\}\}\
			\}\
			self.tblUserList.reloadData() \cf10 // reload tableView for display all Users\cf11 \
		\})\
	\}
\b \
					\cf8 \
- For Sending Message :-\
\
	
\b0 \cf11 let database = Database.database.reference()\
	\
	let str = \'93\\(String(describing: self.getCurrentTimeStamp().replacingOccurrences(of: \'93.\'94, with: \'93\'94)))\'94 + \'93_\'94 + \'93\\(String(describing: Auth.auth().currentUser!.uid))\'94 + \'93_\'94 + \'93\\(String(describing: dict.object(forKey: \'93firebaseId\'94)!))\'94\
		\cf10 // str gives the timestamp, current userId(sender), and firebaseId of receiver\
	\
	\cf11 database.child(\'93Chats\'94).child(\'93\\(String(describing: dict.object(forKey: \'93firebaseId\'94)!))\'94).child(Auth.auth.cuurentUser!.uid).updateChildValues([str: txtMsg.text!])  \cf10 // Msg stored in receiver side in str format\cf11 \
\
	database.child(\'93Chats\'94).child(Auth.auth.cuurentUser!.uid).child.(\'93\\(String(describing: dict.object(forKey: \'93firebaseId\'94)!))\'94)updateChildValues([str: txtMsg.text!])   \cf10 // Msg stored in sender(current user) side in str format\cf11 \

\b \cf8 \
- For Receive Message :-\
	  \

\b0 \cf11 	let database = Database.database.reference()\
	database.child(\'93Chats\'94).child(Auth.auth().currentUser!.uid).child(\'93\\(String(describing: dict.object(forKey: \'93firebaseId\'94)!))\'94).observe(.childAdded) \{ (snapshot) in  \cf10 // Receive message in time_senderId_receiverId\cf11 \
		let component = snapshot.key.component(separatedBy: \'93_\'94) \cf10 // Message separated\cf11 		let dictMsg = NSMutableDictionary()\
			dictMSg.setObject(component[1], forKey: \'93SenderId\'94 as NSCopying) \cf10 // set senderId\cf11 \
			dictMSg.setObject(component[2], forKey: \'93ReceiverId\'94 as NSCopying) \cf10 // ReceiverId\cf11 \
			dictMSg.setObject(snapshot.value!, forKey: \'93Message\'94 as NSCopying) \cf10 // Message\cf11 \
		self.arrMsg.add(dictMsg) \cf10 // Add in Array
\b \cf8 \
	\cf11 \}\
\
	
\b0 \cf8 In cellForRow create 2 cells one for sender and one for receiver :- \cf11 \
	\
	let dict1 = arrMsg.object(at: indexPath.row) as! NSDictionary\
	if((String(describing: dict1.objectForKey: \'93SenderId\'94)!)) == Auth.auth.currentUser?.uid \
	\{\
		\cf10 // Sender tableView cell \cf11 \
		cell.lblText.text =(dict1.objectForKey: \'93Message\'94) as! String \
		return cell\
	\}\
	else\
	\{\
		\cf10 // Receiver tableView cell\cf11 \
		cell.lblText.text =(dict1.objectForKey: \'93Message\'94) as! String \
		return cell\
	\}\

\b \cf8 \
- For Upload User Profile Picture in Firebase Store :-\
\

\b0 	Include the following pod in your Podfile :-\
\cf11 		pod \'91Firebase/Storage\'92\

\b \cf8 \
	
\b0 \cf11 var ref: DatabaseReference!\
	var data = NSData()\
	data = UIImageJPEGRepresentaion(self.imgUserProfile.image!, 0.8)! as NSData\
	let storageRef = Storage.storage().reference()\
	\
	let filePath = \'93\\(Auth.auth().currentUser!.uid\'94)/\\(\'93imgUserProfile\'94)\'94 \cf10 // Firebase Storage Path (userId/Image)\cf11 \
	let metaData = StorageMetadata()\
	metaData.contentType = \'93image/jpg\'94\
\
	storageRef.child(filePath).putData(data as Data, metadata: metaData)\{(metaData, error) in\
		if let error = error \{\
			\cf10 // error\cf11 \
			return\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\tx25100\pardirnatural\partightenfactor0
\cf11 		\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf11 	\}
\b \cf8 \

\b0 \cf3 \

\b \cf8 - For receive User Profile Picture From Firebase Store :-\
\
	
\b0 \cf11 let reference = Storage.storage().reference(forURL: \'93gs://messaginapp.appspot.com\'94)  \cf10 // URL path for firebase applicaton Id\cf11 \
	let url = reference.child(Auth.auth().currentUser!.uid).child(imageName) \
	let placeholderImage = UIImage(named: \'93placeholder.jpg\'94)\
	\
	url.downloadURL(completion: \{(url, error) in  \cf10 // download image from firebase storage\cf11 \
		if error != nil \{\
			print(error?.localizedDescription as Any)\
			return\
		\}\
`		URLSession.shared.dataTask(with: url!, completionHandler: \{ (data, response, error) in \
		if error != nil \{\
			print(error as Any)\
			return\
		\}	\
		DispatchQueue.main.async \{\
			self.imgUserProfile.image(with: url, placeholderImage: placeholderImage)  \cf10 // Set download Image in imgView\cf11 \
		\} \
	   \}).resume()\
	\})\
}